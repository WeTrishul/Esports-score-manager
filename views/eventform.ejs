
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet">
    <title>Dashboard</title>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.2/xlsx.full.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/noty/3.1.4/noty.min.css">

<script src="https://cdnjs.cloudflare.com/ajax/libs/noty/3.1.4/noty.min.js"></script>
</head>

<body class="bg-indigo-900 bg-opacity-5 "  style=" height: 100vh;



background-position: center;
background-repeat: no-repeat;
background-size: cover;
background-image: url(https://img.freepik.com/free-vector/modern-dark-abstract-background-with-red-light_55870-87.jpg?size=626&ext=jpg);" >
<!-- <body class="bg-gray-900"> -->
    <%- include('_navbar') -%>
    <!-- <div class="conatiner mt-5">
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-3">
                <input class="bg-gray-300" type="text" id="eventname" placeholder="eventname"> 
                <input class=" form-control" type="file" id="input" accept=".xls,.xlsx"  >
            </div>
            <div class="col-md-2">
                <button class="btn bg-green-300" id="button">Submit</button>
            </div>
<div class="col-md-12">
    <pre id="jsondata"></pre>
</div>
        </div>
    </div> -->








































    <form id="file-form" class="mt-40 "  enctype="multipart/form-data" > 
        <div class="bg-white p7 rounded w-9/12 mx-auto shadow-xl">
            <div x-data="dataFileDnD()" class="relative flex flex-col p-4 text-gray-400 border border-gray-200 rounded">
                <div x-ref="dnd"
                    class="relative flex  flex-col text-gray-400 border border-gray-200 border-dashed rounded cursor-pointer">
                    <input id="input" type="file" accept=".xls,.xlsx"
                        class="absolute inset-0 z-50 w-full h-full p-0 m-0 outline-none opacity-0 cursor-pointer"
                        @change="addFiles($event)"
                        @dragover="$refs.dnd.classList.add('border-blue-400'); $refs.dnd.classList.add('ring-4'); $refs.dnd.classList.add('ring-inset');"
                        @dragleave="$refs.dnd.classList.remove('border-blue-400'); $refs.dnd.classList.remove('ring-4'); $refs.dnd.classList.remove('ring-inset');"
                        @drop="$refs.dnd.classList.remove('border-blue-400'); $refs.dnd.classList.remove('ring-4'); $refs.dnd.classList.remove('ring-inset');"
                        title="" />
            
                    <div class="flex flex-col items-center justify-center py-10 text-center">
                        <svg class="w-6 h-6 mr-1 text-current-50" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                            stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                        <p class="m-0">Drag Excel here or click in this area.</p>
                    </div>
                </div>
            
                <template x-if="files.length > 0">
                    <div class="grid grid-cols-2 gap-4 mt-4 md:grid-cols-6" @drop.prevent="drop($event)"
                        @dragover.prevent="$event.dataTransfer.dropEffect = 'move'">
                        <template x-for="(_, index) in Array.from({ length: files.length })">
                            <div class="relative flex flex-col items-center overflow-hidden text-center bg-gray-100 border rounded cursor-move select-none"
                                style="padding-top: 100%;" @dragstart="dragstart($event)" @dragend="fileDragging = null"
                                :class="{'border-blue-600': fileDragging == index}" draggable="true" :data-index="index">
                                <button class="absolute top-0 right-0 z-50 p-1 bg-white rounded-bl focus:outline-none" type="button" @click="remove(index)">
                                    <svg class="w-4 h-4 text-gray-700" xmlns="http://www.w3.org/2000/svg" fill="none"
                                        viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                </button>
                              
                                <template x-if="files[index].type.includes('application/') || files[index].type === ''">
                                    <svg class="absolute w-12 h-12 text-gray-400 transform top-1/2 -translate-y-2/3"
                                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
                                    </svg>
                                </template>
                             
            
                                <div class="absolute bottom-0 left-0 right-0 flex flex-col p-2 text-xs bg-white bg-opacity-50">
                                    <span class="w-full font-bold text-gray-900 truncate"
                                        x-text="files[index].name">Loading</span>
                                    <span class="text-xs text-gray-900" x-text="humanFileSize(files[index].size)">...</span>
                                </div>
            
                                <div class="absolute inset-0 z-40 transition-colors duration-300" @dragenter="dragenter($event)"
                                    @dragleave="fileDropping = null"
                                    :class="{'bg-blue-200 bg-opacity-80': fileDropping == index && fileDragging != index}">
                                </div>
                            </div>
                        </template>
                    </div>
                </template>
            </div>
            </div>
    
    
      
          
            
            <div class="main flex border  border-gray-700 rounded-full overflow-hidden m-4 select-none">
              <div class="title  py-3 my-auto px-5 bg-blue-500 text-white text-sm font-semibold mr-3">Event Name</div>
              
    
              <input class="shadow appearance-none border h-1/2 mt-1 p-2 rounded text-grey-darker" id="eventname" placeholder="Type here">
    
            
            </div>
    
    
    
    
    
    
    
    
    
    
    
    
            <div class="focus:outline-none form-group mt-4 text-center">
                <input  class="bg-indigo-500 rounded-full text-center cursor-pointer font-bold text-white px-4 py-3 transition duration-300 ease-in-out hover:bg-blue-400 mr-6"  id="button" value="Upload"/>
            </div>
        </form> 
            <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js" defer></script>
            <script src="https://unpkg.com/create-file-list"></script>
            <script>
            function dataFileDnD() {
                return {
                    files: [],
                    fileDragging: null,
                    fileDropping: null,
                    humanFileSize(size) {
                        const i = Math.floor(Math.log(size) / Math.log(1024));
                        return (
                            (size / Math.pow(1024, i)).toFixed(2) * 1 +
                            " " +
                            ["B", "kB", "MB", "GB", "TB"][i]
                        );
                    },
                    remove(index) {
                        let files = [...this.files];
                        files.splice(index, 1);
            
                        this.files = createFileList(files);
                    },
                    drop(e) {
                        let removed, add;
                        let files = [...this.files];
            
                        removed = files.splice(this.fileDragging, 1);
                        files.splice(this.fileDropping, 0, ...removed);
            
                        this.files = createFileList(files);
            
                        this.fileDropping = null;
                        this.fileDragging = null;
                    },
                    dragenter(e) {
                        let targetElem = e.target.closest("[draggable]");
            
                        this.fileDropping = targetElem.getAttribute("data-index");
                    },
                    dragstart(e) {
                        this.fileDragging = e.target
                            .closest("[draggable]")
                            .getAttribute("data-index");
                        e.dataTransfer.effectAllowed = "move";
                    },
                    loadFile(file) {
                        const preview = document.querySelectorAll(".preview");
                        const blobUrl = URL.createObjectURL(file);
            
                        preview.forEach(elem => {
                            elem.onload = () => {
                                URL.revokeObjectURL(elem.src); // free memory
                            };
                        });
            
                        return blobUrl;
                    },
                    addFiles(e) {
                        const files = createFileList([...this.files], [...e.target.files]);
                        this.files = files;
                        this.form.formData.files = [...files];
                    }
                };
            }
            </script>
    
</body>


<script src="/js/excel.js"></script>

</html>